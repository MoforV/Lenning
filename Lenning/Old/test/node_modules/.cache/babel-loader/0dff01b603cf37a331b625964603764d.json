{"remainingRequest":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\babel-loader\\lib\\index.js!G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!G:\\lanxin\\Lenning\\Lenning\\Old\\test\\src\\page\\order\\order.vue?vue&type=script&lang=js&","dependencies":[{"path":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\src\\page\\order\\order.vue","mtime":1710846626000},{"path":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730623019534},{"path":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\babel-loader\\lib\\index.js","mtime":1730623020067},{"path":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1730623019534},{"path":"G:\\lanxin\\Lenning\\Lenning\\Old\\test\\node_modules\\vue-loader\\lib\\index.js","mtime":1730623017096}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"G:/lanxin/Lenning/Lenning/Old/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"core-js/modules/es6.date.now\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 交易状态\nimport { staff } from \"../../../config/state-type.js\"; // 价格补领\n\nvar Price = require('e-commerce_price');\n\nexport default {\n  data: function data() {\n    return {\n      Price: Price,\n      options: staff(),\n      loading: true,\n      nodatas: true,\n      dialogVisible: false,\n      //弹出详细菜单\n      deta_load: -1,\n      //查看详细菜单\n      rece_load: -1,\n      //接单\n      check_load: -1,\n      //结账\n      time: '',\n      //交易时间\n      statevalue: '',\n      //交易状态\n      nodvalue: '没有订单数据',\n      total: 0,\n      //总条数\n      pagenum: 0,\n      pickerOptions: {\n        disabledDate: function disabledDate(time) {\n          return time.getTime() > Date.now();\n        }\n      },\n      tablist: ['交易时间', '桌号', '用餐人数', '菜单详情', '交易金额(元)', '交易状态'],\n      tabcont: [],\n      user_menu: [],\n      //用户详细菜单\n      dingdan: 0 //订单提醒\n\n    };\n  },\n  methods: {\n    // 分页\n    currentchange: function currentchange(e) {\n      this.pagenum = e - 1;\n      this.obtainorder(0);\n    },\n    // 获取订单\n    obtainorder: function () {\n      var _obtainorder = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(vle) {\n        var params, res;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                params = this.$qs.stringify({\n                  transac_status: this.statevalue,\n                  page: this.pagenum\n                });\n                _context.prev = 1;\n                _context.next = 4;\n                return new this.Request(this.Urls.m().obtainorder + '?' + params).modeget();\n\n              case 4:\n                res = _context.sent;\n                console.log(res);\n                this.nodatas = res.data.data.tatal == 0 ? false : true;\n                this.tabcont = res.data.data.result;\n                this.total = res.data.data.tatal;\n                this.loading = false;\n\n                if (vle == 1) {\n                  localStorage.setItem('order_num', 0);\n                  this.$store.commit('order_remind', 0);\n                }\n\n                _context.next = 16;\n                break;\n\n              case 13:\n                _context.prev = 13;\n                _context.t0 = _context[\"catch\"](1);\n                new this.mytitle(this.$message, 'error', '服务器发生错误,请重试').funtitle();\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[1, 13]]);\n      }));\n\n      function obtainorder(_x) {\n        return _obtainorder.apply(this, arguments);\n      }\n\n      return obtainorder;\n    }(),\n    // 查看详细菜单\n    detailed_menu: function () {\n      var _detailed_menu = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(index, id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.deta_load = index;\n                _context2.prev = 1;\n                _context2.next = 4;\n                return new this.Request(this.Urls.m().vieworder + '?id=' + id).modeget();\n\n              case 4:\n                res = _context2.sent;\n                console.log(res);\n                this.user_menu = res.data.data;\n                this.deta_load = -1;\n                this.dialogVisible = true;\n                _context2.next = 15;\n                break;\n\n              case 11:\n                _context2.prev = 11;\n                _context2.t0 = _context2[\"catch\"](1);\n                this.deta_load = -1;\n                new this.mytitle(this.$message, 'error', '服务器发生错误,请重试').funtitle();\n\n              case 15:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[1, 11]]);\n      }));\n\n      function detailed_menu(_x2, _x3) {\n        return _detailed_menu.apply(this, arguments);\n      }\n\n      return detailed_menu;\n    }(),\n    // 接单\n    receiving: function () {\n      var _receiving = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(index, id) {\n        var res;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                this.rece_load = index;\n                _context3.prev = 1;\n                _context3.next = 4;\n                return new this.Request(this.Urls.m().receiving + '?id=' + id).modeget();\n\n              case 4:\n                res = _context3.sent;\n                this.$set(this.tabcont[index], 'order_receiving', 'rec_order');\n                new this.mytitle(this.$message, 'success', res.data.msg).funtitle();\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](1);\n                new this.mytitle(this.$message, 'error', '服务器发生错误,请重试').funtitle();\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[1, 9]]);\n      }));\n\n      function receiving(_x4, _x5) {\n        return _receiving.apply(this, arguments);\n      }\n\n      return receiving;\n    }(),\n    // 结账\n    checkout: function () {\n      var _checkout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(index, id, openid, sett_amount, order_no) {\n        var obj, res;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.check_load = index;\n                obj = this.$qs.stringify({\n                  id: id,\n                  openid: openid,\n                  sett_amount: sett_amount,\n                  order_no: order_no\n                });\n                _context4.prev = 2;\n                _context4.next = 5;\n                return new this.Request(this.Urls.m().checkout + '?' + obj).modeget();\n\n              case 5:\n                res = _context4.sent;\n                console.log(res);\n                this.$set(this.tabcont[index], 'transac_status', 'success');\n                new this.mytitle(this.$message, 'success', res.data.msg).funtitle();\n                _context4.next = 14;\n                break;\n\n              case 11:\n                _context4.prev = 11;\n                _context4.t0 = _context4[\"catch\"](2);\n                new this.mytitle(this.$message, 'error', '服务器发生错误,请重试').funtitle();\n\n              case 14:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 11]]);\n      }));\n\n      function checkout(_x6, _x7, _x8, _x9, _x10) {\n        return _checkout.apply(this, arguments);\n      }\n\n      return checkout;\n    }(),\n    // 刷新订单\n    refresh_order: function refresh_order() {\n      this.loading = true;\n      this.deta_load = -1, //查看详细菜单\n      this.rece_load = -1, //接单\n      this.check_load = -1, //结账\n      this.obtainorder(1);\n    },\n    // 查询订单\n    queryFun: function queryFun() {\n      this.pagenum = 0;\n      this.obtainorder(0);\n    }\n  },\n  created: function created() {\n    // 获取订单\n    this.obtainorder(0); // 订单提醒\n\n    this.dingdan = localStorage.getItem(\"order_num\");\n  },\n  watch: {\n    // 监听订单提醒\n    \"$store.state.remind\": function $storeStateRemind(newValue, oldValue) {\n      this.dingdan = newValue.num;\n    }\n  }\n};",{"version":3,"sources":["order.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\t<div class=\"ordering\" v-loading.fullscreen.lock=\"loading\">\n\t\t<div class=\"heading\">订单管理</div>\n\t\t<div class=\"content-view\">\n\t\t\t<!-- 查询 -->\n\t\t\t<div class=\"query-view\">\n\t\t\t\t<!-- 状态 -->\n\t\t\t\t<div class=\"quotation-query\">\n\t\t\t\t\t<div>交易状态</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<el-select v-model=\"statevalue\" placeholder=\"请选择\">\n\t\t\t\t\t\t    <el-option\n\t\t\t\t\t\t      v-for=\"item in options\"\n\t\t\t\t\t\t      :key=\"item.value\"\n\t\t\t\t\t\t      :label=\"item.label\"\n\t\t\t\t\t\t      :value=\"item.value\">\n\t\t\t\t\t\t    </el-option>\n\t\t\t\t\t\t  </el-select>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- 按钮 -->\n\t\t\t\t<div class=\"quotation-query\"><el-button type=\"success\" size=\"medium\" @click=\"queryFun()\">查询</el-button></div>\n\t\t\t</div>\n\t\t\t<div class=\"button-view\">\n\t\t\t\t<el-badge :value=\"dingdan\" :max=\"99\" class=\"item\" type=\"warning\">\n\t\t\t\t  <el-button size=\"small\" @click=\"refresh_order()\">刷新订单</el-button>\n\t\t\t\t</el-badge>\n\t\t\t</div>\n\t\t\t<!-- 是否有数据 -->\n\t\t\t<div v-if=\"nodatas\">\n\t\t\t\t<!-- 表头 -->\n\t\t\t\t<div class=\"tab-list\">\n\t\t\t\t\t<span v-for=\"(item,index) in tablist\" :key=\"index\">{{item}}</span>\n\t\t\t\t</div>\n\t\t\t\t<!-- 表格 -->\n\t\t\t\t<div class=\"tab-table-quo\" v-for=\"(item,index) in tabcont\" :key=\"index\">\n\t\t\t\t\t<div>{{item.order_time}}</div>\n\t\t\t\t\t<div>{{item.table_number}}</div>\n\t\t\t\t\t<div>{{item.number_of_dinners}}</div>\n\t\t\t\t\t<div class=\"remarks-text\">\n\t\t\t\t\t\t<el-button type=\"small\" :loading=\"index == deta_load ? true : false\" @click=\"detailed_menu(index,item._id)\">详细菜单</el-button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t<div>{{Price(item.sett_amount)}}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<el-button type=\"info\" size=\"small\" v-if=\"item.order_receiving == 'mis_orders'\" :loading=\"index == rece_load ? true : false\" @click=\"receiving(index,item._id)\">待接单</el-button>\n\t\t\t\t\t\t<el-button size=\"small\" type=\"success\" disabled v-if=\"item.transac_status == 'success'\">已结账</el-button>\n\t\t\t\t\t\t<el-button size=\"small\" type=\"success\" v-if=\"item.transac_status == 'unsettled'\" :loading=\"index == check_load ? true : false\" @click=\"checkout(index,item._id,item._openid,item.sett_amount,item.order_no)\">待结账</el-button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<!-- 分页 -->\n\t\t\t\t<el-pagination\n\t\t\t\t  background\n\t\t\t\t  layout=\"prev, pager, next\"\n\t\t\t\t  :hide-on-single-page=\"true\"\n\t\t\t\t  :total=\"total\"\n\t\t\t\t  @current-change=\"currentchange\"\n\t\t\t\t  >\n\t\t\t\t</el-pagination>\n\t\t\t</div>\n\t\t\t<!-- 没有数据 -->\n\t\t\t<div class=\"nodatas\" v-if=\"!nodatas\">{{nodvalue}}</div>\n\t\t\t<!-- 订单详细弹窗 -->\n\t\t\t<el-dialog\n\t\t\t  title=\"详细菜单\"\n\t\t\t  :visible.sync=\"dialogVisible\"\n\t\t\t  width=\"500px\"\n\t\t\t  :center=\"true\"\n\t\t\t  >\n\t\t\t  <div>\n\t\t\t\t  <div class=\"menu-padd\" v-for=\"(item,index) in user_menu\" :key=\"index\">\n\t\t\t\t\t  <div class=\"Menu-details menu-span\">\n\t\t\t\t\t\t  <span>第{{user_menu.length - index}}次下单</span>\n\t\t\t\t\t\t  <!-- <el-button size=\"mini\" type=\"info\">未接单</el-button> -->\n\t\t\t\t\t  </div>\n\t\t\t\t\t  <div v-for=\"(item_menu,index_menu) in item.goods_list\" :key=\"index_menu\">\n\t\t\t\t\t\t  <div class=\"Menu-details menu-margin\">\n\t\t\t\t\t\t\t  <span>{{item_menu.name}}</span>\n\t\t\t\t\t\t\t  <span v-if=\"item_menu.good_specs != ''\">{{item_menu.good_specs}}</span>\n\t\t\t\t\t\t\t  <span>{{item_menu.quantity}}{{item_menu.unit}}</span>\n\t\t\t\t\t\t  </div>\n\t\t\t\t\t  </div>\n\t\t\t\t  </div>\n\t\t\t  </div>\n\t\t\t</el-dialog>\n\t\t</div>\n\t\t<div style=\"height: 120px;\"></div>\n\t</div>\n</template>\n\n<script>\n// 交易状态\nimport {staff} from '../../../config/state-type.js'\n// 价格补领\nconst Price = require('e-commerce_price')\nexport default{\n\tdata() {\n\t\treturn {\n\t\t\tPrice:Price,\n\t\t\toptions:staff(),\n\t\t\tloading: true,\n\t\t\tnodatas:true,\n\t\t\tdialogVisible:false,//弹出详细菜单\n\t\t\tdeta_load:-1,//查看详细菜单\n\t\t\trece_load:-1,//接单\n\t\t\tcheck_load:-1,//结账\n\t\t\ttime:'',//交易时间\n\t\t\tstatevalue:'',//交易状态\n\t\t\tnodvalue:'没有订单数据',\n\t\t\ttotal:0,//总条数\n\t\t\tpagenum:0,\n\t\t\tpickerOptions: {\n\t\t\t    disabledDate(time) {return time.getTime() > Date.now();}\n\t\t\t},\n\t\t\ttablist:['交易时间','桌号','用餐人数','菜单详情','交易金额(元)','交易状态'],\n\t\t\ttabcont:[],\n\t\t\tuser_menu:[],//用户详细菜单\n\t\t\tdingdan:0,//订单提醒\n\t\t}\n\t},\n\tmethods:{\n\t\t// 分页\n\t\tcurrentchange(e){\n\t\t\tthis.pagenum = e - 1\n\t\t\tthis.obtainorder(0)\n\t\t},\n\t\t// 获取订单\n\t\tasync obtainorder(vle){\n\t\t\tconst params = this.$qs.stringify({transac_status:this.statevalue,page:this.pagenum})\n\t\t\ttry{\n\t\t\t\tlet res = await new this.Request(this.Urls.m().obtainorder + '?' + params).modeget()\n\t\t\t\tconsole.log(res)\n\t\t\t\tthis.nodatas = res.data.data.tatal == 0  ? false : true\n\t\t\t\tthis.tabcont = res.data.data.result\n\t\t\t\tthis.total = res.data.data.tatal\n\t\t\t\tthis.loading = false\n\t\t\t\tif(vle == 1){\n\t\t\t\t\tlocalStorage.setItem('order_num',0)\n\t\t\t\t\tthis.$store.commit('order_remind',0)\n\t\t\t\t}\n\t\t\t}catch(e){\n\t\t\t\tnew this.mytitle(this.$message,'error','服务器发生错误,请重试').funtitle()\n\t\t\t}\n\t\t},\n\t\t// 查看详细菜单\n\t\tasync detailed_menu(index,id){\n\t\t\tthis.deta_load = index\n\t\t\ttry{\n\t\t\t\tlet res = await new this.Request(this.Urls.m().vieworder + '?id=' + id).modeget()\n\t\t\t\tconsole.log(res)\n\t\t\t\tthis.user_menu = res.data.data\n\t\t\t\tthis.deta_load = -1\n\t\t\t\tthis.dialogVisible = true\n\t\t\t}catch(e){\n\t\t\t\tthis.deta_load = -1\n\t\t\t\tnew this.mytitle(this.$message,'error','服务器发生错误,请重试').funtitle()\n\t\t\t}\n\t\t},\n\t\t// 接单\n\t\tasync receiving(index,id){\n\t\t\tthis.rece_load = index\n\t\t\ttry{\n\t\t\t\tlet res = await new this.Request(this.Urls.m().receiving + '?id=' + id).modeget()\n\t\t\t\tthis.$set(this.tabcont[index],'order_receiving','rec_order')\n\t\t\t\tnew this.mytitle(this.$message,'success',res.data.msg).funtitle()\n\t\t\t}catch(e){\n\t\t\t\tnew this.mytitle(this.$message,'error','服务器发生错误,请重试').funtitle()\n\t\t\t}\n\t\t},\n\t\t// 结账\n\t\tasync checkout(index,id,openid,sett_amount,order_no){\n\t\t\tthis.check_load = index\n\t\t\tlet obj = this.$qs.stringify({id,openid,sett_amount,order_no})\n\t\t\ttry{\n\t\t\t\tlet res = await new this.Request(this.Urls.m().checkout + '?' + obj).modeget()\n\t\t\t\tconsole.log(res)\n\t\t\t\tthis.$set(this.tabcont[index],'transac_status','success')\n\t\t\t\tnew this.mytitle(this.$message,'success',res.data.msg).funtitle()\n\t\t\t}catch(e){\n\t\t\t\tnew this.mytitle(this.$message,'error','服务器发生错误,请重试').funtitle()\n\t\t\t}\n\t\t},\n\t\t// 刷新订单\n\t\trefresh_order(){\n\t\t\tthis.loading = true\n\t\t\tthis.deta_load = -1,//查看详细菜单\n\t\t\tthis.rece_load = -1,//接单\n\t\t\tthis.check_load = -1,//结账\n\t\t\tthis.obtainorder(1)\n\t\t},\n\t\t// 查询订单\n\t\tqueryFun(){\n\t\t\tthis.pagenum = 0\n\t\t\tthis.obtainorder(0)\n\t\t}\n\t},\n\tcreated() {\n\t\t// 获取订单\n\t\tthis.obtainorder(0)\n\t\t// 订单提醒\n\t\tthis.dingdan = localStorage.getItem(\"order_num\")\n\t},\n\twatch: {\n\t\t// 监听订单提醒\n\t\t\"$store.state.remind\"(newValue, oldValue) {\n\t\t\tthis.dingdan = newValue.num\n\t\t}\n\t},\n}\n</script>\n\n<style scoped=\"scoped\">\n@import url(\"../../../style/pubiss.css\");\n@import url(\"../../../style/popup.css\");\n::v-deep .el-pagination.is-background .el-pager li:not(.disabled).active {\n\tbackground-color: #00be06;\n\tcolor: #fff;\n}\n::v-deep .el-badge{\n\tmargin-right: 5px;\n}\n.menu-padd{\n\tborder-bottom: 1px solid #f8f8f8;\n}\n.Menu-details{\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: 0 50px;\n}\n.menu-margin{margin: 20px 0;}\n.menu-span{\n\tfont-weight: bold;\n\tfont-size: 15px;\n\tpadding-top: 20px;\n}\n::v-deep .el-dialog{\n\theight: 600px;\n\toverflow-y: auto;\n\tborder-radius: 5px !important;\n}\n</style>\n"],"sourceRoot":"src/page/order"}]}